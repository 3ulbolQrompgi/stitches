{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  IAtom,\n  IComposedAtom,\n  IConfig,\n  ICssPropToToken,\n  ISheet,\n  TCss,\n  TTokensDefinition,\n  IScreens,\n} from \"./types\";\nimport { createSheets, cssPropToToken } from \"./utils\";\n\nconst noop = () => {};\nconst cssClassname = (\n  cssProp: string,\n  value: string | number,\n  pseudo?: string,\n  screen?: string\n) => {\n  const className = `${screen ? `${screen}_` : \"\"}${cssProp}_${String(value)}${\n    pseudo ? pseudo.replace(/:/g, \"_\") : \"\"\n  }`;\n\n  if (pseudo) {\n    return { className, pseudo };\n  }\n\n  return className;\n};\n\nconst toCssProp = (cssPropParts: string[]) => {\n  return cssPropParts.join(\"-\");\n};\n\nconst createToString = (\n  sheets: { [screen: string]: ISheet },\n  screens: IScreens = {}\n) =>\n  function toString(this: IComposedAtom | IAtom) {\n    // This was a composition\n    if (\"atoms\" in this) {\n      return this.atoms.map((atom) => atom.toString()).join(\" \");\n    }\n    // plain atom\n    const className = cssClassname(\n      toCssProp(this.cssPropParts),\n      this.value,\n      this.pseudo,\n      this.screen\n    );\n    const cssProp = toCssProp(this.cssPropParts);\n    const value = this.tokenValue || this.value;\n    let cssRule = \".\";\n\n    if (typeof className === \"string\") {\n      cssRule += `${className}{${cssProp}:${value};}`;\n    } else {\n      cssRule += `${className.className}${className.pseudo}{${cssProp}:${value};}`;\n    }\n\n    sheets[this.screen].insertRule(\n      this.screen ? screens[this.screen](cssRule) : cssRule\n    );\n\n    return typeof className === \"string\" ? className : className.className;\n  };\n\nconst composeIntoMap = (\n  map: Map<string, IAtom>,\n  atoms: (IAtom | IComposedAtom)[]\n) => {\n  let i = atoms.length - 1;\n  for (; i >= 0; i--) {\n    const item = atoms[i];\n    if (\"atoms\" in item) {\n      composeIntoMap(map, item.atoms);\n    } else {\n      if (!map.has(item.id)) {\n        map.set(item.id, item);\n      }\n    }\n  }\n};\n\nexport const createConfig = <T extends IConfig>(config: T) => {\n  return config;\n};\n\nexport const createTokens = <T extends TTokensDefinition>(tokens: T) => {\n  return tokens;\n};\n\nexport const createCss = <T extends IConfig>(\n  config: T,\n  env: Window | null = window\n): TCss<T> => {\n  let cssProp: string;\n  let screen: string | undefined;\n  // We need to know when we call utils to avoid clearing\n  // the screen set for that util\n  let isCallingUtil = false;\n  const sheets = createSheets(env, config.screens);\n  const toString = createToString(sheets, config.screens);\n  const compose = (...atoms: IAtom[]): IComposedAtom => {\n    const map = new Map<string, IAtom>();\n    composeIntoMap(map, atoms);\n    return {\n      atoms: Array.from(map.values()),\n      toString,\n    };\n  };\n\n  return new Proxy(noop, {\n    get(_, prop, proxy) {\n      if (prop === \"compose\") {\n        return compose;\n      }\n\n      // SSR\n      if (prop === \"getStyles\") {\n        return () =>\n          Object.keys(config.screens || {}).reduce((aggr, key) => {\n            return aggr + sheets[key].content;\n          }, sheets[\"\"].content);\n      }\n\n      if (config.screens && prop in config.screens) {\n        screen = String(prop);\n      } else if (config.utils && prop in config.utils) {\n        const util = config.utils[String(prop)](proxy);\n        return (...args: any[]) => {\n          isCallingUtil = true;\n          const result = util(...args);\n          isCallingUtil = false;\n          screen = undefined;\n          return result;\n        };\n      } else {\n        cssProp = String(prop);\n      }\n\n      return proxy;\n    },\n    apply(_, __, argsList) {\n      const cssPropParts = cssProp\n        .split(/(?=[A-Z])/)\n        .map((g) => g.toLowerCase());\n      const value = argsList[0];\n      const pseudo = argsList[1];\n      const token =\n        config.tokens &&\n        config.tokens[cssPropToToken[cssProp as keyof ICssPropToToken]];\n      let tokenValue: string | undefined;\n\n      if (token) {\n        tokenValue = token[value];\n      }\n\n      const atom: IAtom = {\n        id: cssPropParts\n          .concat(pseudo ? pseudo.split(\":\").sort().join(\":\") : \"\")\n          .concat(screen || \"\")\n          .join(\"\"),\n        cssPropParts,\n        value,\n        pseudo,\n        screen: screen || \"\",\n        tokenValue,\n        toString,\n      };\n\n      if (!isCallingUtil) {\n        screen = undefined;\n      }\n\n      return atom;\n    },\n  }) as any;\n};\n"]}