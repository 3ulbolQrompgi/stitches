{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["import { StandardLonghandProperties } from \"csstype\";\n\nexport type TProps =\n  | \"animationDelay\"\n  | \"animationDirection\"\n  | \"animationDuration\"\n  | \"animationFillMode\"\n  | \"animationIterationCount\"\n  | \"animationName\"\n  | \"animationPlayState\"\n  | \"animationTimingFunction\"\n  | \"backgroundAttachment\"\n  | \"backgroundBlendMode\"\n  | \"backgroundClip\"\n  | \"backgroundColor\"\n  | \"backgroundImage\"\n  | \"backgroundOrigin\"\n  | \"backgroundPosition\"\n  | \"backgroundRepeat\"\n  | \"backgroundSize\"\n  | \"borderBottomColor\"\n  | \"borderBottomLeftRadius\"\n  | \"borderBottomRightRadius\"\n  | \"borderBottomStyle\"\n  | \"borderBottomWidth\"\n  | \"borderCollapse\"\n  | \"borderImageOutset\"\n  | \"borderImageRepeat\"\n  | \"borderImageSlice\"\n  | \"borderImageSource\"\n  | \"borderImageWidth\"\n  | \"borderLeftColor\"\n  | \"borderLeftStyle\"\n  | \"borderLeftWidth\"\n  | \"borderRightColor\"\n  | \"borderRightStyle\"\n  | \"borderRightWidth\"\n  | \"borderTopColor\"\n  | \"borderTopLeftRadius\"\n  | \"borderTopRightRadius\"\n  | \"borderTopStyle\"\n  | \"borderTopWidth\"\n  | \"bottom\"\n  | \"boxShadow\"\n  | \"boxSizing\"\n  | \"breakAfter\"\n  | \"breakBefore\"\n  | \"breakInside\"\n  | \"captionSide\"\n  | \"clear\"\n  | \"clip\"\n  | \"color\"\n  | \"content\"\n  | \"cursor\"\n  | \"direction\"\n  | \"display\"\n  | \"emptyCells\"\n  | \"float\"\n  | \"fontFamily\"\n  | \"fontKerning\"\n  | \"fontOpticalSizing\"\n  | \"fontSize\"\n  | \"fontStretch\"\n  | \"fontStyle\"\n  | \"fontVariant\"\n  | \"fontVariantLigatures\"\n  | \"fontVariantCaps\"\n  | \"fontVariantNumeric\"\n  | \"fontVariantEastAsian\"\n  | \"fontWeight\"\n  | \"height\"\n  | \"imageRendering\"\n  | \"isolation\"\n  | \"justifyItems\"\n  | \"justifySelf\"\n  | \"left\"\n  | \"letterSpacing\"\n  | \"lineHeight\"\n  | \"listStyleImage\"\n  | \"listStylePosition\"\n  | \"listStyleType\"\n  | \"marginBottom\"\n  | \"marginLeft\"\n  | \"marginRight\"\n  | \"marginTop\"\n  | \"maxHeight\"\n  | \"maxWidth\"\n  | \"minHeight\"\n  | \"minWidth\"\n  | \"mixBlendMode\"\n  | \"objectFit\"\n  | \"objectPosition\"\n  | \"offsetDistance\"\n  | \"offsetPath\"\n  | \"offsetRotate\"\n  | \"opacity\"\n  | \"orphans\"\n  | \"outlineColor\"\n  | \"outlineOffset\"\n  | \"outlineStyle\"\n  | \"outlineWidth\"\n  | \"overflowAnchor\"\n  | \"overflowWrap\"\n  | \"overflowX\"\n  | \"overflowY\"\n  | \"paddingBottom\"\n  | \"paddingLeft\"\n  | \"paddingRight\"\n  | \"paddingTop\"\n  | \"pointerEvents\"\n  | \"position\"\n  | \"resize\"\n  | \"right\"\n  | \"scrollBehavior\"\n  | \"speak\"\n  | \"tableLayout\"\n  | \"tabSize\"\n  | \"textAlign\"\n  | \"textAlignLast\"\n  | \"textDecoration\"\n  | \"textDecorationLine\"\n  | \"textDecorationStyle\"\n  | \"textDecorationColor\"\n  | \"textDecorationSkipInk\"\n  | \"textUnderlinePosition\"\n  | \"textIndent\"\n  | \"textRendering\"\n  | \"textShadow\"\n  | \"textSizeAdjust\"\n  | \"textOverflow\"\n  | \"textTransform\"\n  | \"top\"\n  | \"touchAction\"\n  | \"transitionDelay\"\n  | \"transitionDuration\"\n  | \"transitionProperty\"\n  | \"transitionTimingFunction\"\n  | \"unicodeBidi\"\n  | \"verticalAlign\"\n  | \"visibility\"\n  | \"whiteSpace\"\n  | \"widows\"\n  | \"width\"\n  | \"willChange\"\n  | \"wordBreak\"\n  | \"wordSpacing\"\n  | \"zIndex\"\n  | \"zoom\"\n  | \"backfaceVisibility\"\n  | \"columnCount\"\n  | \"columnGap\"\n  | \"columnRuleColor\"\n  | \"columnRuleStyle\"\n  | \"columnRuleWidth\"\n  | \"columnSpan\"\n  | \"columnWidth\"\n  | \"backdropFilter\"\n  | \"alignContent\"\n  | \"alignItems\"\n  | \"alignSelf\"\n  | \"flexBasis\"\n  | \"flexGrow\"\n  | \"flexShrink\"\n  | \"flexDirection\"\n  | \"flexWrap\"\n  | \"justifyContent\"\n  | \"gridAutoColumns\"\n  | \"gridAutoFlow\"\n  | \"gridAutoRows\"\n  | \"gridColumnEnd\"\n  | \"gridColumnStart\"\n  | \"gridTemplateAreas\"\n  | \"gridTemplateColumns\"\n  | \"gridTemplateRows\"\n  | \"gridRowEnd\"\n  | \"gridRowStart\"\n  | \"rowGap\"\n  | \"hyphens\"\n  | \"order\"\n  | \"perspective\"\n  | \"perspectiveOrigin\"\n  | \"shapeOutside\"\n  | \"shapeImageThreshold\"\n  | \"shapeMargin\"\n  | \"transform\"\n  | \"transformOrigin\"\n  | \"transformStyle\"\n  | \"userSelect\"\n  | \"bufferedRendering\"\n  | \"clipPath\"\n  | \"clipRule\"\n  | \"mask\"\n  | \"filter\"\n  | \"floodColor\"\n  | \"floodOpacity\"\n  | \"lightingColor\"\n  | \"stopColor\"\n  | \"stopOpacity\"\n  | \"colorInterpolation\"\n  | \"colorInterpolationFilters\"\n  | \"colorRendering\"\n  | \"fill\"\n  | \"fillOpacity\"\n  | \"fillRule\"\n  | \"markerEnd\"\n  | \"markerMid\"\n  | \"markerStart\"\n  | \"maskType\"\n  | \"shapeRendering\"\n  | \"stroke\"\n  | \"strokeDasharray\"\n  | \"strokeDashoffset\"\n  | \"strokeLinecap\"\n  | \"strokeLinejoin\"\n  | \"strokeMiterlimit\"\n  | \"strokeOpacity\"\n  | \"strokeWidth\"\n  | \"alignmentBaseline\"\n  | \"baselineShift\"\n  | \"dominantBaseline\"\n  | \"textAnchor\"\n  | \"writingMode\"\n  | \"vectorEffect\"\n  | \"paintOrder\"\n  | \"d\"\n  | \"cx\"\n  | \"cy\"\n  | \"x\"\n  | \"y\"\n  | \"r\"\n  | \"rx\"\n  | \"ry\"\n  | \"caretColor\"\n  | \"lineBreak\";\n\nexport interface IScreens {\n  [key: string]: (css: string) => string;\n}\n\nexport interface IAtom {\n  id: string;\n  cssPropParts: string[];\n  value: string;\n  pseudo: string | undefined;\n  screen: string;\n  tokenValue: string | undefined;\n  toString: () => string;\n}\n\nexport interface IComposedAtom {\n  atoms: IAtom[];\n  toString: () => string;\n}\n\nexport interface ICssPropToToken {\n  color: \"colors\";\n  backgroundColor: \"colors\";\n  marginTop: \"space\";\n  marginLeft: \"space\";\n  marginRight: \"space\";\n  marginBottom: \"space\";\n  paddingTop: \"space\";\n  paddingLeft: \"space\";\n  paddingRight: \"space\";\n  paddingBottom: \"space\";\n  gridGap: \"space\";\n  gridColumnGap: \"space\";\n  gridRowGap: \"space\";\n  fontSize: \"fontSizes\";\n  borderTopColor: \"colors\";\n  borderLeftColor: \"colors\";\n  borderRightColor: \"colors\";\n  borderBottomColor: \"colors\";\n  fontFamily: \"fonts\";\n  fontWeight: \"fontWeights\";\n  lineHeight: \"lineHeights\";\n  letterSpacing: \"letterSpacings\";\n  width: \"sizes\";\n  height: \"sizes\";\n  minWidth: \"sizes\";\n  maxWidth: \"sizes\";\n  minHeight: \"sizes\";\n  maxHeight: \"sizes\";\n  borderTopWidth: \"borderWidths\";\n  borderLeftWidth: \"borderWidths\";\n  borderRightWidth: \"borderWidths\";\n  borderBottomWidth: \"borderWidths\";\n  borderTopStyle: \"borderStyles\";\n  borderLeftStyle: \"borderStyles\";\n  borderRightStyle: \"borderStyles\";\n  borderBottomStyle: \"borderStyles\";\n  borderTopLeftRadius: \"radii\";\n  borderTopRightRadius: \"radii\";\n  borderBottomRightRadius: \"radii\";\n  borderBottomLeftRadius: \"radii\";\n  boxShadow: \"shadows\";\n  textShadow: \"shadows\";\n  zIndex: \"zIndices\";\n  transition: \"transitions\";\n}\n\nexport interface ITokenDefinition {\n  [key: string]: string;\n  [key: number]: string;\n}\n\nexport type TTokensDefinition = {\n  colors?: ITokenDefinition;\n  space?: ITokenDefinition;\n  fontSizes?: ITokenDefinition;\n  fonts?: ITokenDefinition;\n  fontWeights?: ITokenDefinition;\n  lineHeights?: ITokenDefinition;\n  letterSpacings?: ITokenDefinition;\n  sizes?: ITokenDefinition;\n  borderWidths?: ITokenDefinition;\n  borderStyles?: ITokenDefinition;\n  radii?: ITokenDefinition;\n  shadows?: ITokenDefinition;\n  zIndices?: ITokenDefinition;\n  transitions?: ITokenDefinition;\n};\n\nexport interface IConfig {\n  screens?: IScreens;\n  tokens?: TTokensDefinition;\n  utils?: {\n    [name: string]: (css: TCss<any>) => (...args: any[]) => string;\n  };\n}\n\nexport type TCss<T extends IConfig> = {\n  [K in TProps]: (\n    value: K extends keyof ICssPropToToken\n      ? T[\"tokens\"] extends object\n        ? T[\"tokens\"][ICssPropToToken[K]] extends object\n          ? keyof T[\"tokens\"][ICssPropToToken[K]]\n          : K extends keyof StandardLonghandProperties\n          ? StandardLonghandProperties[K]\n          : string\n        : K extends keyof StandardLonghandProperties\n        ? StandardLonghandProperties[K]\n        : string\n      : K extends keyof StandardLonghandProperties\n      ? StandardLonghandProperties[K]\n      : string,\n    pseudo?: string\n  ) => string;\n} &\n  {\n    [U in keyof T[\"utils\"]]: T[\"utils\"][U] extends (\n      css: TCss<any>\n    ) => (...args: infer P) => string\n      ? (...args: P) => string\n      : never;\n  } &\n  {\n    [S in keyof T[\"screens\"]]: {\n      [K in TProps]: (\n        value: K extends keyof ICssPropToToken\n          ? T[\"tokens\"] extends object\n            ? T[\"tokens\"][ICssPropToToken[K]] extends object\n              ? keyof T[\"tokens\"][ICssPropToToken[K]] | string\n              : K extends keyof StandardLonghandProperties\n              ? StandardLonghandProperties[K]\n              : string\n            : K extends keyof StandardLonghandProperties\n            ? StandardLonghandProperties[K]\n            : string\n          : K extends keyof StandardLonghandProperties\n          ? StandardLonghandProperties[K]\n          : string,\n        pseudo?: string\n      ) => string;\n    };\n  } & {\n    compose: (...compositions: string[]) => string;\n    getStyles: () => string;\n  };\n\nexport interface ISheet {\n  cssRules: any[];\n  content: string;\n  insertRule(rule: string): void;\n}\n"]}